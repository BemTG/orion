use core::traits::Into;
use orion::numbers::{FP64x64, FixedTrait};
use cubit::f128::ONE_u128 as ONE;

const ERF_COMPUTATIONAL_ACCURACY: u128 = 100_u128; 
const ROUND_CHECK_NUMBER: u128 = 10_u128;
// Values > MAX_ERF_NUMBER return 1
const MAX_ERF_NUMBER: u128 = 64563604257983430656_u128;
// Values <= ERF_TRUNCATION_NUMBER -> two decimal places, and values > ERF_TRUNCATION_NUMBER -> one decimal place
const ERF_TRUNCATION_NUMBER: u128 = 36893488147419103232_u128;

fn get_key(mag: u128, erf_computational_accuracy: u128, round_check_number: u128) -> u128{
    let mut round_number = mag*erf_computational_accuracy*ROUND_CHECK_NUMBER/ONE;
	let rounded_off_value = match (round_check_number/2).into() {
		0 => 1,
		_ => round_check_number/2,
	};
    if (round_number % round_check_number) >= rounded_off_value{
        round_number = round_number/round_check_number+1;
    } else {
        round_number = round_number/round_check_number;
    }

	let mut origin_number = round_number*ONE;
	let origin_rounded_off_value = match (erf_computational_accuracy/2).into() {
		0 => 1,
		_ => erf_computational_accuracy/2,
	};
	if (origin_number % erf_computational_accuracy) >= origin_rounded_off_value{
        origin_number = origin_number/erf_computational_accuracy+1;
    } else {
        origin_number = origin_number/erf_computational_accuracy;
    }
    origin_number
}

fn get_different_accuracy_key(mag: u128) -> felt252{
    if mag <= ERF_TRUNCATION_NUMBER{
        return get_key(mag, ERF_COMPUTATIONAL_ACCURACY, ROUND_CHECK_NUMBER).into();
    } else if mag <= MAX_ERF_NUMBER{
        return get_key(mag, ROUND_CHECK_NUMBER, ROUND_CHECK_NUMBER).into();
    } else{
        panic(array!['erf::get_different_accuracy_key', 'Key > MAX_ERF_NUMBER,', 'it is not in the erf_dict ', mag.into()])
    }
}

fn get_lookup_table_values(key: felt252) -> u128{
	// Construct the erf lookup table
    let mut erf_table: Felt252Dict<u128> = Default::default();
	erf_table.insert(0, 0_u128);
	erf_table.insert(184467440737095516, 208142279036071072_u128);
	erf_table.insert(368934881474191032, 416242934472567232_u128);
	erf_table.insert(553402322211286548, 624260367679495296_u128);
	erf_table.insert(737869762948382064, 832153029941062528_u128);
	erf_table.insert(922337203685477580, 1039879447350402944_u128);
	erf_table.insert(1106804644422573096, 1247398245629553408_u128);
	erf_table.insert(1291272085159668776, 1454668174849927424_u128);
	erf_table.insert(1475739525896764129, 1661648134028665088_u128);
	erf_table.insert(1660206966633859645, 1868297195576427008_u128);
	erf_table.insert(1844674407370955161, 2074574629572391936_u128);
	erf_table.insert(2029141848108050677, 2280439927842463744_u128);
	erf_table.insert(2213609288845146193, 2485852827816977408_u128);
	erf_table.insert(2398076729582241710, 2690773336144481280_u128);
	erf_table.insert(2582544170319337553, 2895161752038532608_u128);
	erf_table.insert(2767011611056432742, 3098978690334796800_u128);
	erf_table.insert(2951479051793528258, 3302185104236156928_u128);
	erf_table.insert(3135946492530623774, 3504742307723958272_u128);
	erf_table.insert(3320413933267719290, 3706611997613982720_u128);
	erf_table.insert(3504881374004814807, 3907756275236240384_u128);
	erf_table.insert(3689348814741910323, 4108137667718166528_u128);
	erf_table.insert(3873816255479005839, 4307719148851377152_u128);
	erf_table.insert(4058283696216101355, 4506464159522699776_u128);
	erf_table.insert(4242751136953196871, 4704336627690769408_u128);
	erf_table.insert(4427218577690292387, 4901300987890141184_u128);
	erf_table.insert(4611686018427387904, 5097322200245477376_u128);
	erf_table.insert(4796153459164483420, 5292365768979031040_u128);
	erf_table.insert(4980620899901578936, 5486397760395360256_u128);
	erf_table.insert(5165088340638675107, 5679384820327877632_u128);
	erf_table.insert(5349555781375769313, 5871294191032579072_u128);
	erf_table.insert(5534023222112865484, 6062093727515032576_u128);
	erf_table.insert(5718490662849961000, 6251751913277435904_u128);
	erf_table.insert(5902958103587056517, 6440237875473368064_u128);
	erf_table.insert(6087425544324152033, 6627521399458594816_u128);
	erf_table.insert(6271892985061247549, 6813572942727099392_u128);
	erf_table.insert(6456360425798343065, 6998363648222307328_u128);
	erf_table.insert(6640827866535438581, 7181865357014296576_u128);
	erf_table.insert(6825295307272534097, 7364050620334585856_u128);
	erf_table.insert(7009762748009629614, 7544892710960923648_u128);
	erf_table.insert(7194230188746725130, 7724365633945352192_u128);
	erf_table.insert(7378697629483820646, 7902444136679609344_u128);
	erf_table.insert(7563165070220916162, 8079103718292817920_u128);
	erf_table.insert(7747632510958011678, 8254320638377208832_u128);
	erf_table.insert(7932099951695107194, 8428071925038478336_u128);
	erf_table.insert(8116567392432202711, 8600335382268215296_u128);
	erf_table.insert(8301034833169298227, 8771089596636659712_u128);
	erf_table.insert(8485502273906393743, 8940313943304876032_u128);
	erf_table.insert(8669969714643489259, 9107988591356256256_u128);
	erf_table.insert(8854437155380584775, 9274094508448081920_u128);
	erf_table.insert(9038904596117680291, 9438613464784658432_u128);
	erf_table.insert(9223372036854775808, 9601528036414361600_u128);
	erf_table.insert(9407839477591871324, 9762821607853701120_u128);
	erf_table.insert(9592306918328966840, 9922478374042292224_u128);
	erf_table.insert(9776774359066062356, 10080483341633368064_u128);
	erf_table.insert(9961241799803157872, 10236822329625237504_u128);
	erf_table.insert(10145709240540254699, 10391481969339820032_u128);
	erf_table.insert(10330176681277350215, 10544449703755059200_u128);
	erf_table.insert(10514644122014443110, 10695713786198818816_u128);
	erf_table.insert(10699111562751538626, 10845263278412423168_u128);
	erf_table.insert(10883579003488635453, 10993088047992748032_u128);
	erf_table.insert(11068046444225730969, 11139178765222393856_u128);
	erf_table.insert(11252513884962826485, 11283526899298078720_u128);
	erf_table.insert(11436981325699922001, 11426124713968005120_u128);
	erf_table.insert(11621448766437017518, 11566965262589513728_u128);
	erf_table.insert(11805916207174113034, 11706042382618923008_u128);
	erf_table.insert(11990383647911208550, 11843350689545969664_u128);
	erf_table.insert(12174851088648304066, 11978885570285762560_u128);
	erf_table.insert(12359318529385399582, 12112643176041672704_u128);
	erf_table.insert(12543785970122495098, 12244620414653018112_u128);
	erf_table.insert(12728253410859590615, 12374814942441867264_u128);
	erf_table.insert(12912720851596686131, 12503225155573657600_u128);
	erf_table.insert(13097188292333781647, 12629850180946728960_u128);
	erf_table.insert(13281655733070877163, 12754689866626244608_u128);
	erf_table.insert(13466123173807972679, 12877744771838261248_u128);
	erf_table.insert(13650590614545068195, 12999016156540069888_u128);
	erf_table.insert(13835058055282163712, 13118505970583140352_u128);
	erf_table.insert(14019525496019259228, 13236216842485327872_u128);
	erf_table.insert(14203992936756354744, 13352152067829151744_u128);
	erf_table.insert(14388460377493450260, 13466315597303212032_u128);
	erf_table.insert(14572927818230545776, 13578712024403965952_u128);
	erf_table.insert(14757395258967641292, 13689346572815177728_u128);
	erf_table.insert(14941862699704736808, 13798225083482576896_u128);
	erf_table.insert(15126330140441832325, 13905354001401262080_u128);
	erf_table.insert(15310797581178927841, 14010740362133477376_u128);
	erf_table.insert(15495265021916023357, 14114391778074478592_u128);
	erf_table.insert(15679732462653118873, 14216316424484128768_u128);
	erf_table.insert(15864199903390214389, 14316523025301962752_u128);
	erf_table.insert(16048667344127309905, 14415020838763323392_u128);
	erf_table.insert(16233134784864405422, 14511819642834194432_u128);
	erf_table.insert(16417602225601500938, 14606929720482222080_u128);
	erf_table.insert(16602069666338596454, 14700361844801351680_u128);
	erf_table.insert(16786537107075691970, 14792127264007346176_u128);
	erf_table.insert(16971004547812787486, 14882237686321330176_u128);
	erf_table.insert(17155471988549883002, 14970705264758325248_u128);
	erf_table.insert(17339939429286978519, 15057542581837537280_u128);
	erf_table.insert(17524406870024074035, 15142762634230988800_u128);
	erf_table.insert(17708874310761169551, 15226378817366812672_u128);
	erf_table.insert(17893341751498265067, 15308404910003300352_u128);
	erf_table.insert(18077809192235360583, 15388855058789533696_u128);
	erf_table.insert(18262276632972456099, 15467743762828154880_u128);
	erf_table.insert(18446744073709551616, 15545085858255493120_u128);
	erf_table.insert(18631211514446647132, 15620896502854008832_u128);
	erf_table.insert(18815678955183742648, 15695191160711634944_u128);
	erf_table.insert(19000146395920838164, 15767985586942304256_u128);
	erf_table.insert(19184613836657933680, 15839295812481531904_u128);
	erf_table.insert(19369081277395029196, 15909138128970633216_u128);
	erf_table.insert(19553548718132124712, 15977529073742716928_u128);
	erf_table.insert(19738016158869220229, 16044485414923208704_u128);
	erf_table.insert(19922483599606315745, 16110024136657332224_u128);
	erf_table.insert(20106951040343413882, 16174162424476436480_u128);
	erf_table.insert(20291418481080509399, 16236917650814795776_u128);
	erf_table.insert(20475885921817604915, 16298307360687947776_u128);
	erf_table.insert(20660353362554700431, 16358349257543309312_u128);
	erf_table.insert(20844820803291790704, 16417061189293291520_u128);
	erf_table.insert(21029288244028886220, 16474461134540791808_u128);
	erf_table.insert(21213755684765981736, 16530567189006364672_u128);
	erf_table.insert(21398223125503077253, 16585397552166088704_u128);
	erf_table.insert(21582690566240175390, 16638970514108524544_u128);
	erf_table.insert(21767158006977270906, 16691304442618875904_u128);
	erf_table.insert(21951625447714366423, 16742417770497863680_u128);
	erf_table.insert(22136092888451461939, 16792328983122491392_u128);
	erf_table.insert(22320560329188557455, 16841056606255333376_u128);
	erf_table.insert(22505027769925652971, 16888619194108602368_u128);
	erf_table.insert(22689495210662748487, 16935035317668771840_u128);
	erf_table.insert(22873962651399844003, 16980323553287045120_u128);
	erf_table.insert(23058430092136939520, 17024502471540604928_u128);
	erf_table.insert(23242897532874035036, 17067590626369081344_u128);
	erf_table.insert(23427364973611130552, 17109606544490213376_u128);
	erf_table.insert(23611832414348226068, 17150568715098355712_u128);
	erf_table.insert(23796299855085321584, 17190495579848931328_u128);
	erf_table.insert(23980767295822417100, 17229405523131617280_u128);
	erf_table.insert(24165234736559512616, 17267316862634573824_u128);
	erf_table.insert(24349702177296608133, 17304247840201650176_u128);
	erf_table.insert(24534169618033703649, 17340216612984107008_u128);
	erf_table.insert(24718637058770799165, 17375241244887996416_u128);
	erf_table.insert(24903104499507894681, 17409339698317971456_u128);
	erf_table.insert(25087571940244990197, 17442529826217906176_u128);
	erf_table.insert(25272039380982085713, 17474829364408369152_u128);
	erf_table.insert(25456506821719181230, 17506255924220641280_u128);
	erf_table.insert(25640974262456276746, 17536826985426591744_u128);
	erf_table.insert(25825441703193372262, 17566559889463431168_u128);
	erf_table.insert(26009909143930467778, 17595471832952045568_u128);
	erf_table.insert(26194376584667563294, 17623579861507229696_u128);
	erf_table.insert(26378844025404658810, 17650900863837954048_u128);
	erf_table.insert(26563311466141754327, 17677451566135410688_u128);
	erf_table.insert(26747778906878849843, 17703248526746337280_u128);
	erf_table.insert(26932246347615945359, 17728308131128877056_u128);
	erf_table.insert(27116713788353040875, 17752646587087935488_u128);
	erf_table.insert(27301181229090136391, 17776279920286781440_u128);
	erf_table.insert(27485648669827231907, 17799223970031376384_u128);
	erf_table.insert(27670116110564327424, 17821494385323737088_u128);
	erf_table.insert(27854583551301422940, 17843106621180358656_u128);
	erf_table.insert(28039050992038518456, 17864075935211624448_u128);
	erf_table.insert(28223518432775613972, 17884417384457840640_u128);
	erf_table.insert(28407985873512709488, 17904145822477408256_u128);
	erf_table.insert(28592453314249805004, 17923275896682506240_u128);
	erf_table.insert(28776920754986900520, 17941822045917437952_u128);
	erf_table.insert(28961388195723996037, 17959798498274711552_u128);
	erf_table.insert(29145855636461091553, 17977219269143760896_u128);
	erf_table.insert(29330323077198187069, 17994098159487121408_u128);
	erf_table.insert(29514790517935282585, 18010448754338713600_u128);
	erf_table.insert(29699257958672378101, 18026284421518878720_u128);
	erf_table.insert(29883725399409473617, 18041618310560610304_u128);
	erf_table.insert(30068192840146569134, 18056463351841458176_u128);
	erf_table.insert(30252660280883664650, 18070832255915431936_u128);
	erf_table.insert(30437127721620760166, 18084737513039206400_u128);
	erf_table.insert(30621595162357855682, 18098191392886906880_u128);
	erf_table.insert(30806062603094951198, 18111205944447655936_u128);
	erf_table.insert(30990530043832046714, 18123792996100098048_u128);
	erf_table.insert(31174997484569142231, 18135964155858038784_u128);
	erf_table.insert(31359464925306237747, 18147730811781371904_u128);
	erf_table.insert(31543932366043333263, 18159104132546453504_u128);
	erf_table.insert(31728399806780428779, 18170095068170047488_u128);
	erf_table.insert(31912867247517524295, 18180714350881038336_u128);
	erf_table.insert(32097334688254619811, 18190972496134107136_u128);
	erf_table.insert(32281802128991715328, 18200879803759552512_u128);
	erf_table.insert(32466269569728810844, 18210446359243550720_u128);
	erf_table.insert(32650737010465906360, 18219682035133120512_u128);
	erf_table.insert(32835204451203001876, 18228596492560154624_u128);
	erf_table.insert(33019671891940097392, 18237199182878894080_u128);
	erf_table.insert(33204139332677192908, 18245499349411323904_u128);
	erf_table.insert(33388606773414288424, 18253506029294995456_u128);
	erf_table.insert(33573074214151383941, 18261228055427880960_u128);
	erf_table.insert(33757541654888479457, 18268674058504921088_u128);
	erf_table.insert(33942009095625574973, 18275852469141008384_u128);
	erf_table.insert(34126476536362670489, 18282771520075268096_u128);
	erf_table.insert(34310943977099766005, 18289439248451522560_u128);
	erf_table.insert(34495411417836861521, 18295863498169980928_u128);
	erf_table.insert(34679878858573957038, 18302051922305267712_u128);
	erf_table.insert(34864346299311052554, 18308011985585967104_u128);
	erf_table.insert(35048813740048148070, 18313750966931048448_u128);
	erf_table.insert(35233281180785243586, 18319275962038544384_u128);
	erf_table.insert(35417748621522339102, 18324593886022047744_u128);
	erf_table.insert(35602216062259434618, 18329711476090615808_u128);
	erf_table.insert(35786683502996530135, 18334635294267887616_u128);
	erf_table.insert(35971150943733625651, 18339371730146226176_u128);
	erf_table.insert(36155618384470721167, 18343927003671875584_u128);
	erf_table.insert(36340085825207816683, 18348307167957243904_u128);
	erf_table.insert(36524553265944912199, 18352518112116494336_u128);
	erf_table.insert(36709020706682007715, 18356565564120772608_u128);
	erf_table.insert(36893488147419103232, 18360455093669533696_u128);
	erf_table.insert(38738162554790060032, 18391782614824026112_u128);
	erf_table.insert(40582836962161016832, 18412380624802023424_u128);
	erf_table.insert(42427511369531965440, 18425656187587059712_u128);
	erf_table.insert(44272185776902922240, 18434043234066948096_u128);
	erf_table.insert(46116860184273879040, 18439237133993463808_u128);
	erf_table.insert(47961534591644835840, 18442390007235248128_u128);
	erf_table.insert(49806208999015792640, 18444266072035147776_u128);
	erf_table.insert(51650883406386741248, 18445360324505407488_u128);
	erf_table.insert(53495557813757698048, 18445985951670278144_u128);
	erf_table.insert(55340232221128654848, 18446336575964956672_u128);
	erf_table.insert(57184906628499611648, 18446529193908295680_u128);
	erf_table.insert(59029581035870568448, 18446632918035736576_u128);
	erf_table.insert(60874255443241517056, 18446687668919484416_u128);
	erf_table.insert(62718929850612473856, 18446715997887504384_u128);
	erf_table.insert(64563604257983430656, 18446730365964054528_u128);
	erf_table.get(key)
}

fn erf(x: FP64x64) -> FP64x64{
    // Lookup
    // 1. if x.mag < 3.5 { lookup table }
    // 2. else{ return 1}
    let mut erf_value: u128 = 0_u128;

    if x.mag <= MAX_ERF_NUMBER {
        let round_number = get_different_accuracy_key(x.mag);
        erf_value = get_lookup_table_values(round_number);
    } else {
        erf_value = ONE;
    }
    FP64x64 { mag: erf_value, sign: x.sign }
}